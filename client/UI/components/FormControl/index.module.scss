@use 'styles/variables' as variables;
@use 'styles/mixin/media' as media;

.default {
  position: relative;
  display: block;

  p {
    position: absolute;
    top: 0;
    left: 0;
    transform: translateY(3px);
    pointer-events: none;
    color: #939393;
    user-select: none;

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;

    transition: opacity variables.$transition, transform variables.$transition,
      font-size variables.$transition, color variables.$transition;

    &.up {
      font-size: variables.rem(12px);
      transform: translateY(-60%);
      opacity: 0.7;
    }
  }

  textarea {
    resize: vertical;
    width: 100%;
    max-width: inherit;
  }

  input,
  textarea {
    display: block;
    width: 100%;
    border-bottom: variables.rem(1px) solid #939393;
    transition: border-bottom-color variables.$transition;

    &:focus {
      border-bottom-color: lighten(#939393, 40%);

      & + p {
        @extend .up;
      }
    }

    &:disabled {
      cursor: auto;
      pointer-events: none;

      &,
      & + p {
        opacity: 0.5;
      }
    }
  }

  &.required {
    input,
    textarea {
      border-bottom-color: #f02849;
    }

    p {
      color: #f02849;
    }
  }

  &.full input + p,
  &.full textarea + p {
    @extend .up;
  }

  p,
  input,
  textarea {
    color: #f2f2f2;
    letter-spacing: variables.rem(0.15px);
  }

  .icon {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
  }

  @include media.for-mobile {
    textarea {
      max-height: variables.rem(100px);
      min-height: variables.rem(60px);
    }

    input,
    textarea {
      padding: variables.rem(14px) 0 variables.rem(8px) 0;
    }

    input,
    p {
      font-size: variables.rem(14px);
      line-height: variables.rem(16px);
    }

    p.up {
      font-size: variables.rem(10px);
    }
  }

  @include media.for-tablet {
    textarea {
      max-height: variables.rem(150px);
      min-height: variables.rem(100px);
    }

    input,
    textarea {
      padding: variables.rem(16px) 0 variables.rem(10px) 0;
    }

    input,
    textarea,
    p {
      font-size: variables.rem(14px);
      line-height: variables.rem(16px);
    }

    p.up {
      font-size: variables.rem(12px);
    }
  }

  @include media.for-laptop {
    input,
    textarea {
      padding: variables.rem(18px) 0 variables.rem(12px) 0;
    }

    input,
    textarea,
    p {
      font-size: variables.rem(16px);
      line-height: variables.rem(19px);
    }

    p.up {
      font-size: variables.rem(14px);
    }
  }

  @include media.for-desktop {
    input,
    textarea {
      padding: variables.rem(20px) 0 variables.rem(14px) 0;
    }

    input,
    textarea,
    p {
      font-size: variables.rem(18px);
      line-height: variables.rem(21px);
    }

    p.up {
      font-size: variables.rem(16px);
    }
  }
}

.checkbox {
  position: relative;
  display: inline-flex;
  cursor: pointer;

  input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
    visibility: hidden;

    &:checked + span {
      background-color: #007dff;
      border-color: #007dff;

      &::before {
        opacity: 1;
        visibility: visible;
      }
    }

    &:disabled + span,
    &:disabled + span + p {
      cursor: auto;
      pointer-events: none;
      opacity: 0.5;
      user-select: none;
    }
  }

  span {
    position: relative;
    display: block;
    border: variables.rem(2px) solid #d1d1d1;
    border-radius: variables.rem(2px);
    transition: background-color 0.3s ease-in-out, border-color 0.3s ease-in-out,
      opacity 0.3s ease-in-out;

    &::before {
      position: relative;
      content: '';
      top: 50%;
      left: 50%;
      display: block;
      opacity: 0;
      visibility: hidden;
      background-repeat: no-repeat;
      background-position: center;
      background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="11" height="11" viewBox="0 0 24 24"><path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"/></svg>');
      transform: translate(-50%, -50%);
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
    }
  }

  p {
    font-weight: 400;
    user-select: none;
    letter-spacing: variables.rem(0.15px);
    transition: color 0.3s ease-in-out, opacity 0.3s ease-in-out;
  }

  &.required {
    span {
      border-color: #f02849;
    }

    p {
      color: #f02849;
    }
  }

  @include media.for-mobile {
    gap: variables.rem(6px);

    span {
      width: variables.rem(14px);
      height: variables.rem(14px);

      &::before {
        width: variables.rem(8px);
        height: variables.rem(8px);
        background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 24 24"><path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"/></svg>');
      }
    }

    p {
      font-size: variables.rem(14px);
      line-height: variables.rem(18px);
    }
  }

  @include media.for-tablet {
    gap: variables.rem(8px);

    span {
      width: variables.rem(16px);
      height: variables.rem(16px);

      &::before {
        width: variables.rem(9px);
        height: variables.rem(9px);
        background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" viewBox="0 0 24 24"><path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"/></svg>');
      }
    }

    p {
      font-size: variables.rem(15px);
      line-height: variables.rem(19px);
    }
  }

  @include media.for-laptop {
    gap: variables.rem(12px);

    span {
      width: variables.rem(18px);
      height: variables.rem(18px);

      &::before {
        width: variables.rem(11px);
        height: variables.rem(11px);
      }
    }

    p {
      font-size: variables.rem(16px);
      line-height: variables.rem(20px);
    }
  }
}

.radio {
  display: flex;
  align-items: center;

  input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
    visibility: hidden;

    &:checked + span::before {
      opacity: 1;
    }

    & + span {
      cursor: pointer;
    }

    & + span + p {
      cursor: pointer;
    }

    &:disabled + span,
    &:disabled + span + p {
      cursor: auto !important;
      pointer-events: none;
      opacity: 0.5;
      user-select: none;
    }
  }

  span {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 100%;
    background-color: #fff;
    transition: opacity 0.3s ease-in-out, background-color 0.3s ease-in-out;

    &::before {
      position: absolute;
      content: '';
      opacity: 0;
      background-color: #007dff;
      border-radius: inherit;
      transition: opacity 0.3s ease-in-out;
    }
  }

  p {
    font-weight: 400;
    user-select: none;
    letter-spacing: variables.rem(0.15px);
    transition: color 0.3s ease-in-out, opacity 0.3s ease-in-out;
  }

  &.required {
    span {
      background-color: #f02849;
    }

    p {
      color: #f02849;
    }
  }

  @include media.for-mobile {
    gap: variables.rem(5px);

    p {
      font-size: variables.rem(14px);
      line-height: variables.rem(18px);
    }

    span {
      width: variables.rem(20px);
      height: variables.rem(20px);

      &::before {
        width: variables.rem(14px);
        height: variables.rem(14px);
      }
    }
  }

  @include media.for-tablet {
    gap: variables.rem(6px);

    p {
      font-size: variables.rem(15px);
      line-height: variables.rem(19px);
    }

    span {
      width: variables.rem(22px);
      height: variables.rem(22px);

      &::before {
        width: variables.rem(16px);
        height: variables.rem(16px);
      }
    }
  }

  @include media.for-laptop {
    gap: variables.rem(8px);

    p {
      font-size: variables.rem(16px);
      line-height: variables.rem(20px);
    }

    span {
      width: variables.rem(26px);
      height: variables.rem(26px);

      &::before {
        width: variables.rem(20px);
        height: variables.rem(20px);
      }
    }
  }
}

.password_visible {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
  cursor: pointer;

  svg {
    display: inline-block;
    width: variables.rem(21px);
    height: variables.rem(21px);

    path {
      stroke: #fff;
      stroke-opacity: 0.95;
      stroke-width: variables.rem(2px);
      transition: variables.$transition stroke;
    }
  }

  @media (hover: hover) {
    svg:hover path {
      stroke: variables.$primary;
    }
  }
}
